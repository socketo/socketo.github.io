<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>socketo.github.io</title>
    <link>https://socketo.github.io/</link>
    <description>Recent content on socketo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 09 Aug 2023 15:58:43 +0900</lastBuildDate><atom:link href="https://socketo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>はてなブログからブログを移行しました</title>
      <link>https://socketo.github.io/posts/2023/08/10/</link>
      <pubDate>Wed, 09 Aug 2023 15:58:43 +0900</pubDate>
      
      <guid>https://socketo.github.io/posts/2023/08/10/</guid>
      <description>3ヶ月前くらいに、GitHub Pagesにブログを移行しようとして止まっていた手をようやく動かして、過去のブログにあった記事をすべてこっちに移行した。
旧ブログ : https://socketo.hatenablog.jp/</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://socketo.github.io/about/</link>
      <pubDate>Wed, 26 Apr 2023 12:18:51 +0900</pubDate>
      
      <guid>https://socketo.github.io/about/</guid>
      <description>このサイトは、基本的に個人的に気になった技術の情報を発信するものです。(予定)
Profile Name : socketo(そけと) Job : Security Engineer (Digital Forensics Analyst) Links Twitter : @sys_socket GitHub : https://github.com/socketo Hatena Blog : https://socketo.hatenablog.jp/ SpeakerDeck : https://speakerdeck.com/socketo </description>
    </item>
    
    <item>
      <title>Hello Hugo</title>
      <link>https://socketo.github.io/posts/2023/04/25/</link>
      <pubDate>Tue, 25 Apr 2023 22:00:26 +0900</pubDate>
      
      <guid>https://socketo.github.io/posts/2023/04/25/</guid>
      <description>いつの頃からか、自分のはてなブログ #include &amp;lt;sys/socket.h&amp;gt;の冒頭に「この広告は、90日以上更新していないブログに表示しています。」と表示がされるようになった。
3年以上、個人の技術ブログを書いていないのは如何なものかと思い重い腰を上げた次第である。
Hugoのインストール Homebrewでhugoをインストールし、ブログを作成する。
$ brew install hugo $ hugo new site hugo_blog hubo_blogディレクトリが作成されたので、テーマの追加。今回はシンプルで良さそうなHugo PaperModを使用する。
$ git init . $ git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod configにブログのbaseURLの修正やテーマの追加をする。
baseURL = &amp;#39;https://socketo.github.io&amp;#39; title = &amp;#39;socketo.github.io&amp;#39; languageCode = &amp;#39;ja&amp;#39; theme = &amp;#39;PaperMod&amp;#39; author = &amp;#39;socketo&amp;#39; copyright = &amp;#39;© Copyright socketo - All rights reserved.&amp;#39; テーマの導入まで完了をしているので、実際に動かして確認をする。
$ hugo serve 起動し、 localhost:1313 にアクセスする。
記事の作成 この記事を作成する。
$ hugo new posts/hello-hugo.md 任意の記事の内容を書く。
記事のビルド $ hugo さいごに ブログを書いていきたい。</description>
    </item>
    
    <item>
      <title>GCFA(GIAC Certified Forensic Analyst)合格した</title>
      <link>https://socketo.github.io/posts/2019/11/11/</link>
      <pubDate>Mon, 11 Nov 2019 00:49:57 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2019/11/11/</guid>
      <description>※ 移行前の元ブログ記事 : GCFA(GIAC Certified Forensic Analyst)合格した - #include &amp;lt;sys_socket.h&amp;gt;
GIAC Certified Forensic Analystというのに合格した報告です。
以上です。</description>
    </item>
    
    <item>
      <title>Magnet User Summit CTF 2019 WriteUp [Mobile]</title>
      <link>https://socketo.github.io/posts/2019/04/11/</link>
      <pubDate>Thu, 11 Apr 2019 22:26:59 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2019/04/11/</guid>
      <description>※ 移行前の元ブログ記事 : Magnet User Summit CTF 2019 WriteUp [Mobile] - #include &amp;lt;sys_socket.h&amp;gt;
Magnet User Summit 2019 Magnet Forensicsというフォレンジック製品などをやっている企業のサミットが2019/04/02～2019/04/03に行われていました。
https://magnetusersummit.com/
Twitterで「#mus2019」で検索すると現地の様子がなんとなく分かりそう。発表スライドとかもあったりする。
https://twitter.com/search?q=%23mus2019
今回も、以前のDFIR CTFのようにMagnet User Summit CTF 2019として開催されていたものが、公開されていたのでやっていきの記事です。 AXIOMの使い方を学ぶ的な問題。
Hacking Exposed Computer Forensics Blog Daily Blog #657 MUS2019 DFIR CTF open to the public : https://www.hecfblog.com/2019/04/daily-blog-657-mus2019-dfir-ctf-open-to.html
Magnet AXIOMという有償のフォレンジックツールが2019/05/04までのトライアルのキーがついて使用することができてすごい。 せっかくなので使ってみる感じで、頑張ってAXIOMだけでとりあえずやっていきます。
https://www.magnetforensics.com/products/magnet-axiom/
「Mobile」カテゴリはモバイルフォレンジック的な感じの問題で、Android端末のデータを取得したケースが与えられてそれについて質問していくという感じです。
やっていきましょう。
AXIOMのインストール AXIOMは一応日本語対応はしていますが、設定する際に「日本語」ではなく、「English」にする方が良いです。 (CSVなどのファイルに出力する際、カラムが結構厳しい日本語とかになってしまうので)
インストールしたら、ライセンスが聞かれるので、ファイル名「AXIOM 30-day Trial Key Install by May 4.txt」にキーが書いてあるのでそれをライセンスキー入力する。
Mobile ケースファイル「AXIOM - Mar 28 2019 114941 Mobile/Case.</description>
    </item>
    
    <item>
      <title>BLE CTF WriteUp</title>
      <link>https://socketo.github.io/posts/2019/02/21/</link>
      <pubDate>Thu, 21 Feb 2019 20:33:47 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2019/02/21/</guid>
      <description>※ 移行前の元ブログ記事 : BLE CTF WriteUp - #include &amp;lt;sys_socket.h&amp;gt;
はじめに 昨年2018年のDEF CON 26 WIRELESS VILLAGEで発表された@hackgnar氏のBLE CTFをやってみるという話。
hackgnar - Learning Bluetooth Hackery with BLE CTF
http://www.hackgnar.com/2018/06/learning-bluetooth-hackery-with-ble-ctf.html
ble_ctf_ A Bluetooth low energy capture the flag : https://github.com/hackgnar/ble_ctf
READMEに書かれているように、このCTFを実施するには、手元のコンピュータだけでなくESP32-DevkitとBluetoothドングルが必要になる。
私の今回の環境は以下
ESP32-DevkitC V4 エレコムのよく分からんBluetooth USBアダプタ
ESP32ビルド環境 macOS Mojave version 10.14.3
端末(ThinkPad X220) Kali Linux
環境構築 ESP32-DevKitC V4を使う。aliexpressとかだと$7前後で購入出来る。安い。
国内だと秋月やマルツなどで売ってる。
ＥＳＰ３２－ＤｅｖＫｉｔＣ　ＥＳＰ－ＷＲＯＯＭ－３２開発ボード http://akizukidenshi.com/catalog/g/gM-11819/
Wi-Fi+BLE無線モジュールESP-WROOM-32搭載開発ボード【ESP32-DEVKITC】 https://www.marutsu.co.jp/pc/i/952928/
ESP32の環境構築 [ESP-IDF] ESP32のビルド環境を整える(macOS Mojave version 10.14.3)
Arudino IDEでも開発環境として使えるようだが、今回はBLE CTFのREADMEにESP-IDFのBluetoothのサンプルプログラムと同様にと書いてあった為、EPS32の公式開発フレームワークであるESP-IDFを使用する。
Espressif IoT Development Framework : https://github.</description>
    </item>
    
    <item>
      <title>SECCON 2018 Online CTF Forensics問題 Write-up</title>
      <link>https://socketo.github.io/posts/2018/10/28/</link>
      <pubDate>Sun, 28 Oct 2018 15:41:22 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/10/28/</guid>
      <description>※ 移行前の元ブログ記事 : SECCON 2018 Online CTF Forensics問題 Write-up - #include &amp;lt;sys_socket.h&amp;gt;
はじめに SECCON2018のオンライン大会のForensics問題のWrite-up
フォレンジック問題はやるかと腰を上げてやるだけやった
UnzipとHistory
Unzip 問題文 $ Unzip flag.zip. Write-up ファイル名:unzip.zip_26c0cb5b40e9f78641ae44229cda45529418183fのZIPファイルが落ちてくる．
$ file unzip.zip_26c0cb5b40e9f78641ae44229cda45529418183f unzip.zip_26c0cb5b40e9f78641ae44229cda45529418183f: Zip archive data, at least v1.0 to extract 普通にzipファイルなのでunzipする
$ unzip -d unzip unzip.zip_26c0cb5b40e9f78641ae44229cda45529418183f Archive: unzip.zip_26c0cb5b40e9f78641ae44229cda45529418183f extracting: unzip/flag.zip inflating: unzip/makefile.sh unzipするとflag.zipとmakefile.shが出てくる flag.zipは暗号化されたZIPファイル
$ ls -la .rw-r--r--@ 225 socketo 27 10 0:10 flag.zip .rwx---r-x@ 99 socketo 27 10 0:10 makefile.sh makefile.shの中身を見ると，zipパスワードにperl -e &amp;quot;print time()&amp;quot;で出力されたunixtimeが設定されていることがわかる</description>
    </item>
    
    <item>
      <title>Defcon DFIR CTF 2018 # Image2 - FileServer WriteUp</title>
      <link>https://socketo.github.io/posts/2018/09/16/</link>
      <pubDate>Sun, 16 Sep 2018 15:11:41 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/09/16/</guid>
      <description>※ 移行前の元ブログ記事 : Defcon DFIR CTF 2018 # Image2 - FileServer WriteUp - #include &amp;lt;sys_socket.h&amp;gt;
はじめに 以下の記事の続き．
Defcon DFIR CTF 2018 # Image1 - HRServer WriteUp
ディスクイメージの容量が大きくて削除したいので供養(すべて解けていないので誰か教えてください状態)
File Server Basic HR Serverの問題を解いているといつの間にかNextという項目が増えて，Image2.7zのパスワードが開示されるので，Imag2(File Server)をやっていくことができる
File Server - Basic 1(2) 問題文
What is the volume serial number of the only partition on the File Server Disk Image Volumeのシリアルナンバーを答える．
FTK Imagerで開いているイメージファイルのFile System Informationを見る．
FLAG:C096-2465
File Server - Basic 2(2) 問題文
What is the name of the examiner who made the Forensic Image?</description>
    </item>
    
    <item>
      <title>Defcon DFIR CTF 2018 # Image1 - HRServer WriteUp</title>
      <link>https://socketo.github.io/posts/2018/08/26/</link>
      <pubDate>Sun, 26 Aug 2018 03:08:15 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/08/26/</guid>
      <description>※ 移行前の元ブログ記事 : Defcon DFIR CTF 2018 # Image1 - HRServer WriteUp - #include &amp;lt;sys_socket.h&amp;gt;
はじめに インターネットを眺めていたら，Magnet Forensicsが開催してaいたDFIRのCTF「Defcon DFIR CTF 2018」が公開されていたのでやった話（全部は解けていない）
The #Defcon #DFIR #CTF is now open to the public. https://t.co/IdOE23dMzh #infosec— David Cowen (@HECFBlog) 2018年8月13日
Hacking Exposed Computer Forensics Blog Daily Blog #451 Defcon DFIR CTF 2018 Open to the Public : http://www.hecfblog.com/2018/08/daily-blog-451-defcon-dfir-ctf-2018.html
Defcon DFIR CTF 2018 : https://defcon2018.ctfd.io/challenges
対象イメージファイル 実際に調査するイメージファイルは以下のブログのDropboxのリンクからImage1，Image2，Image3と3つダウンロードできる．
http://www.hecfblog.com/2018/08/daily-blog-451-defcon-dfir-ctf-2018.html
Image1.7zのパスワードは書いてあるので，それを使う．
Image2.7z，Image3.7zのパスワードはCTFの問題を解いていくと分かる．
やっていったら長くなったので，Image2とImage3については今後書く予定です．
Image 1 : HRServer Image1.</description>
    </item>
    
    <item>
      <title>Digital Forensic Challenge #2 - User Policy Violation Case Write up</title>
      <link>https://socketo.github.io/posts/2018/02/19/</link>
      <pubDate>Mon, 19 Feb 2018 09:06:57 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/02/19/</guid>
      <description>※ 移行前の元ブログ記事 : Digital Forensic Challenge #2 - User Policy Violation Case Write up - #include &amp;lt;sys_socket.h&amp;gt;
本投稿の内容に間違いや問題などありましたら，Twitter経由などでやんわり優しめに教えて頂ければ幸いです．(Twitter:@sys_socket)
恐らく何かしら間違ってたり，足りなかったりします．多分． 誰か教えてください．
はい．
https://www.ashemery.com/dfir.html のChallenge #2
Case1はこちら Digital Forensic Challenge #1 - Web Server Case Write up - socketo.hatenablog.jp
問題文 This is another digital forensics image that was prepared to cover a full Windows Forensics course. System Image: here Hashes: here Password = here You can use the image to learn the following: File Carving, Custom Carving, and Keyword Searching File System Forensics - NTFS Deep Windows Registry Forensics: System and User Hives SYSTEM SOFTWARE SAM NTUSER.</description>
    </item>
    
    <item>
      <title>Digital Forensic Challenge #1 - Web Server Case Write up</title>
      <link>https://socketo.github.io/posts/2018/02/05/</link>
      <pubDate>Mon, 05 Feb 2018 03:21:46 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/02/05/</guid>
      <description>※ 移行前の元ブログ記事 : Digital Forensic Challenge #1 - Web Server Case Write up - #include &amp;lt;sys_socket.h&amp;gt;
本投稿の内容に間違いや問題などありましたら，Twitter経由などでやんわり優しめに教えて頂ければ幸いです．(Twitter:@sys_socket)
はい．
https://www.ashemery.com/dfir.html のChallenge #1
参考:
Between Two DFIRns: Ashemery.com: Challenge #1 - Web Server Case Write-up
問題文 A company’s web server has been breached through their website. Our team arrived just in time to take a forensic image of the running system and its memory for further analysis. The files can be found below: 1.</description>
    </item>
    
    <item>
      <title>ハニーポットCowrieを設置した話</title>
      <link>https://socketo.github.io/posts/2018/01/22/</link>
      <pubDate>Mon, 22 Jan 2018 00:05:37 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2018/01/22/</guid>
      <description>※ 移行前の元ブログ記事 : ハニーポットCowrieを設置した話 - #include &amp;lt;sys_socket.h&amp;gt;
はい．
本投稿の内容に間違いや問題などありましたら，Twitter経由などでやんわり優しめに教えて頂ければ幸いです．(Twitter:@sys_socket)
Cowrieとは GitHub - micheloosterhof/cowrie: Cowrie SSH/Telnet Honeypot
Cowrie is a medium interaction SSH and Telnet honeypot designed to log brute force attacks and the shell interaction performed by the attacker. Cowrie is developed by Michel Oosterhof.
攻撃者のブルートフォース攻撃とシェルの対話を記録するように設計された対話型SSH/Telnetのハニーポットです．
導入 ここを見てやっていきます． cowrie/INSTALL.md at master · micheloosterhof/cowrie · GitHub
今回はUbuntu　16.04.3 LTSで構築していきます．
必要なパッケージのインストール
$ sudo apt install git python-virtualenv libssl-dev libffi-dev build-essential libpython-dev python2.7-minimal authbind インストールするパッケージで分かるのですが，Cowrieではpython-virtualenv上でPython2.</description>
    </item>
    
    <item>
      <title>セキュリティ・キャンプ全国大会2016に参加した話</title>
      <link>https://socketo.github.io/posts/2016/08/14/</link>
      <pubDate>Sun, 14 Aug 2016 19:38:43 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2016/08/14/</guid>
      <description>※ 移行前の元ブログ記事 : セキュリティ・キャンプ全国大会2016に参加した話 - #include &amp;lt;sys_socket.h&amp;gt;
セキュリティ・キャンプ全国大会2016：IPA 独立行政法人 情報処理推進機構 : https://www.ipa.go.jp/jinzai/camp/2016/zenkoku2016.html
表題の通り，セキュリティ・キャンプ2016全国大会に参加していました． 8/9~8/13の4泊5日です． めちゃくちゃ濃い5日間ですごい楽しく過ごせて，関係者の皆様本当にありがとうございました． 行く前は4泊5日って長いなぁ生きて帰れるかなぁと思ってたんですが，振り返ると一瞬で終わった感じでした．
受講した講義 1,2-F:作って学ぶ低レイヤーネットワーク 3-D:The OOM CTF 4-A:クラウドセキュリティ基礎 5-D:みんなでクールなROPガジェットを探そうぜ 6,7-F:なぜマルウェア解析は自動化できないのか とりあえず普段とはしたことのないことをやりたいなぁと思い欲望の赴くままに受講する講義を決めたら，こんな感じになりました． 講義内容の感想などは下で．
やたら長いポエムになりました．よろしければ．
0日目（前日） #セキュキャンのお得な情報が集まるタグ hashtag on Twitter
自宅で荷物などの準備をしながらわりと講義についてけるかなぁと心配していたんですが，このハッシュタグで過去のキャンパーの方の大喜利を見て笑っていました．
1日目 開会式の前などに微妙に時間があり，そこで参加者の方やチューターの方と名刺交換をしました． 短時間で多くの人と会話をすることになるので，コミュ症の僕にはなかなか辛い感じになりましたが，皆さん優しく接してくれてとても嬉しかったです． 1日目は全体講義とグループワークが主でした． ぼくらのグループ名は「このキャンプには問題がある！」と完全に元ネタである『この美術部には問題がある！』を知っているオタクではないと，運営への批判に思われるようなグループ名で参加しました． 実際に，ぼくらのグループ名を見て関係者の方から話しかけられてアッという気持ちになったりなどもありました．
本題のグループワークでは以下の４つの題材から１つを選びそれについて発表するというものでした．
未来「10年後のIT社会のセキュリティのあるべき姿」
倫理「子供たちに正しくIT技術を身につけさせるために」
対策「小規模企業におけるセキュリティ対策」
回避「攻撃者に狙われないために何をすればいいか」
ぼくらのグループは倫理「子供たちに正しくIT技術を身につけさせるために」を選択しました． グループワークの課題の一つとして，参加者以外のチューター，講師，協賛企業の方々から10名以上ヒアリングをするというものも与えられました． またコミュ症としてはなかなか辛い課題だと思ったのですが，参加者以外の方に話しかけれるきっかけとなり，ヒアリング以外の話題もすることが出来たりしたので結果としては様々な方にヒアリングをして良かったと思いました． ぼくのヒアリングに応えてくれた方々，支離滅裂でまとまっていないようなぼくの話を最後まで聞いてくれて本当にありがとうございました．
この日の深夜アニメは『NEW GAME!』がTOKYO MXで0:30から放送でしたが普通に寝てて見れませんでした．
2日目 1,2-F:作って学ぶ低レイヤーネットワーク 2日目から専門講義開始ということで，初日から集中講義を選択していたので8時間「作って学ぶ低レイヤーネットワーク」を受講しました． この講義は前半後半で分かれており，前半では坂井さんのパケットをバイナリエディタで直接読み書きしたりツールを使ってパケットを送受信したりしました． ネットワークに関する知識があまり無いぼくでしたが，実際に自分でバイナリエディタで書いたものを送信して実際に受信された時はとても嬉しかったです． ARPに関してはどんなものかくらいは知ってましたが，バイナリレベルで読んだり書いたりしたことが無かったのでとても新鮮でした．
後半では今岡さんのArduinoを使って自分でバイナリエディタで作成したパケットを10BASE-Tのフレームとして送出したりするものでした． 電子工作をほぼやったことが無く，配線を間違えたりその他色々と間違えたりした時に同じ参加者の方やチューターさんに凄い助けて貰って本当にありがとうございました． 講義資料の最後にArduinoを20MHz改造するのがありましたが，正直コレめちゃくちゃ難しそう（自分がやったらめちゃくちゃ破壊しそう）でした．
DAY2 CTF 2日目の夜はグループごとチームになってのCTFでした． 結果としてはチームでは300ptを獲得しました．100ptは入れることが出来ましたが，時間が無いのに色々な問題を試そうとしてみたりして結構時間をかけた結果全然解けないというアレになりました．つらいですね． 1番はじめに得点をしたということで特別賞を貰いました．
この日の深夜アニメは『Fate/kaleid liner プリズマ☆イリヤ ドライ!!』がTOKYO MXで01:05から放送でしたが普通に寝てて見れませんでした．</description>
    </item>
    
    <item>
      <title>PythonでSeleniumを使ってagqrの登録を自動化する</title>
      <link>https://socketo.github.io/posts/2016/04/10/</link>
      <pubDate>Sun, 10 Apr 2016 20:19:09 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2016/04/10/</guid>
      <description>※ 移行前の元ブログ記事 PythonでSeleniumを使ってagqrの登録を自動化する - #include &amp;lt;sys_socket.h&amp;gt;
JOQR 超!A&amp;amp;G+でよく声優さんのラジオを聴いたり見たりしています．
超！A&amp;amp;G | 文化放送
僕は『洲崎西』と『西明日香のデリケートゾーン!』が好きで基本毎週視聴しているんですが，前々からこの超!A&amp;amp;G+で気になってたことがあって，プレイヤーの画面に行くとこのような登録画面が出て視聴するのが初めてじゃないのに登録を迫られることです．
ここでは&amp;quot;初めて『超！Ａ＆Ｇ＋』ご利用になる際はユーザー登録が必要です。&amp;ldquo;と書いてあるが，初めてじゃなくても登録してから一定期間経つとこのページが現れて登録を迫られるっぽい．
目的のラジオ開始時間ギリギリにagqrのページを開いてこの登録画面が出ると，ラジオをはじめから聞けないとかいう事故が何回か起こったりしてた．
そこでSeleniumを使って自動化して起動出来れば数秒は早く出来るんじゃないかということで適当に書いた．
Seleniumは前にOSCかどこかで聞いて何か遊びで使えないかなぁと思っていたので遊びで使えて満足．
radio buttonとかのチェックとか登録のボタンのsubmitがnameもidも振られていなかったりしてよくわからなかったけど，xpathで指定したらそのまま扱えたのでよかった．
xpathを利用する際に，FireFoxのアドオンのFireBugとFirePathが便利だった．</description>
    </item>
    
    <item>
      <title>SANS Netwars Tournament 2015に参加した話</title>
      <link>https://socketo.github.io/posts/2015/08/24/</link>
      <pubDate>Mon, 24 Aug 2015 20:39:26 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2015/08/24/</guid>
      <description>※ 移行前の元ブログ記事 : SANS Netwars Tournament 2015に参加した話 - #include &amp;lt;sys_socket.h&amp;gt;
http://www.nri-secure.co.jp/event/2015/netwars.html
8/22,23と大手町サンケイプラザで開催されてたSANS Netwars Tournament 2015に参加してきた．
1日目のセキュリティトレーニングの内容や，2日目のCTFの問題は公開NGとのことで感想だけ．
2日とも開始時間が9:30で，大手町から遠い場に住んでいる私は早朝に起きて向かうという感じだった．
夏休みに入って生活リズムが無茶苦茶になっている中，早寝早起きをするのがなかなかに険しかった．
1日目，プロの方が受けるようなトレーニングを無料で受けることが出来て本当に良かった．
やはり自分の根底にある基礎的な知識不足が非常にマズイというのがよく分かったので精進していきたい．
2日目のCTFは案の定，スコアボードのトップに乗らないくらいに下の方をウロウロしてた．
Lv2の時点でなかなか自分には厳しい感じになったりしてた．
今までやったCTFとはちょっと違う感じだったが，こういうCTFの方が個人的に好きな気がした．
全て英語（同時翻訳アリ）だったので，英語苦手マンの私はテキスト読むのにもなかなか時間掛かったりしてた．
今回，同時翻訳というのをはじめて身近で体験したのですが，あれ本当に凄いですね．感動した．
某教授も仰ってた通りに英語も頑張って行きたい感じです．
とても有意義な2日間でした．
また次回開催される事があるならば応募して是非とも参加したいです．</description>
    </item>
    
    <item>
      <title>CTF for ビギナーズ2015 博多（Attack &amp; Defense）に参加した話</title>
      <link>https://socketo.github.io/posts/2015/06/13/03/</link>
      <pubDate>Sat, 13 Jun 2015 20:34:08 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2015/06/13/03/</guid>
      <description>※ 移行前の元ブログ記事 : CTF for ビギナーズ2015 博多（Attack &amp;amp; Defense）に参加した話 - #include &amp;lt;sys_socket.h&amp;gt;
2015-06-07，富士通株式会社 九州支社で開催されたCTF for ビギナーズ2015 博多（Attack &amp;amp; Defense）に参加してきました．
CTF for ビギナーズ2015 博多（Attack &amp;amp; Defense）: https://attack-and-defense.doorkeeper.jp/events/24249
今回のこのイベントで初めて福岡に行きました．博多の明太子や博多ラーメン，もつ鍋がとても美味しかったのでサイコーという感じ．
競技 今回のCTFは名前の通り，Attack＆Defenseということで私が今までやってきたjeopardy型ではなく，本当にサーバーを介しての攻防戦だった．
各チーム与えられたサーバ上で稼働しているシステムを保守しながら，相手チームに攻撃するとのこと．
与えられるサーバの環境は全チーム同じ環境で，まずは自分の持っているサーバの脆弱性を探りその脆弱性を直しながら，他のチームが修正する前にそこを叩く．という感じでした．
競技のルールとしては，AttackポイントとDefenseポイントの合計で決定する．
Defenseポイントは，与えられたサーバへの定期的なヘルスチェックのスキャンでサーバ上で稼働しているシステムが稼働しているかのSLAに応じた得点．
Attackポイントは，今回与えられたサービスがネットショッピングのwebサイトだったため，敵のサーバで稼働しているサービスであるネットショッピングの顧客データの擬似個人情報ををスコアサーバに送信すると得点が得られる．
みたいな感じだった．
はじめ2時間ほどは大抵のチームがSLAを保ちDefenseポイントが入り続けて順位は横ばい状態だった．後半になると，あるチームが攻撃に成功し，徐々に他のチームも得点していった．
ちなみに今回私は@Ranats_rifleとIchigoMilkなる可愛らしいチーム名で参加した．
（競技終了後にTAKESAKOさんに「女の子が来るかと思ったこのチーム名」と言われた）
結果 結果としては結論から言うと9位だった．
CTF for ビギナーズ2015 博多(Attack &amp;amp; Defense) 終了しました。参加された方はお疲れ様でした。今回の優勝はPh//shh/binです。 #seccon #ctf4b #a_and_d pic.twitter.com/JFiED8niDe — SECCON CTF (@secconctf) 2015, 6月 7
一回攻め込まれてそのままズルズルとやってたら終了してた．
@Ranats_rifleに攻撃の方を任せっぱなしで自分はサーバの状態を眺めていたりしたけど，なんともAttackポイントを得られなかった．
つらい．@Ranats_rifleの攻撃がわりといいところまで行っていたそうで，完全にまたもや自分は眺めていただけで終了した．つらい．
攻防戦が初めてだとはいえ，ここまで手足が出せない状態なのは非常にキツかったが，あまりできない体験はできた．
攻防戦型の大会は次にSECCONの九州大会で開催するそうなのでそれまでにマッチョになってリベンジしたいと思う．
おまけ 本場の博多ラーメン美味しかった．（一緒に行った@Ranats_rifleが替え玉合わせて4玉食べててすごかった</description>
    </item>
    
    <item>
      <title>CpawLT #1に参加した話</title>
      <link>https://socketo.github.io/posts/2015/06/13/02/</link>
      <pubDate>Sat, 13 Jun 2015 20:33:51 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2015/06/13/02/</guid>
      <description>2015-5-31，CpawLT #1に参加してきました．
CpawLT #1 : ATND : https://atnd.org/events/65601
前日にアキバでCTFerな方々と遊んだり，午後からedomaesecに参加したりして連日都内となっておりました．
====
CpawLT #とは CpawというプログラミングサークルのLT大会らしいです．
Cpawは”コポォ”と読むとか”シーパウ”と読むとか宗派があるらしいです．
今回参加した経緯といいますと，この会を主催している@porisuteru さんが誘ってくれてという感じです．
LTの内容はATNDに書いてある通り，なんでもOKという感じでしたがみなさんやはり技術系の話が多かったです．（自分のLTは技術系と言っていいのかわからない）
参加者はやう10人ほどという感じでゆる〜い感じでLT大会が始まっていきました．
LT LTは一人持ち時間約10分以内（？）くらいで時間もわりとあったのでLTでしがた時間を気にせずに話していきました．
自分は外部の人間ですがLTをさせて頂くことになり，RaspberryPiの紹介と4DSystemsのLCDでハロー!!きんいろモザイクを見る話をしました．
権利問題上，LTスライドは公開していいのかどうか怪しいのでこのまま供養します．
参加者のみなさんのLTの内容は技術的な話題が多く，数学史から技術書の話，Unityを使ったゲーム制作の話などなど…
普段，自分が聞く機会がない内容の話ばかりで大変有意義なものだった．
懇親会&amp;ndash;ここから異常&amp;ndash; 懇親会は吉祥寺のムーの子孫で行われました．
#CpawLT](https://twitter.com/hashtag/CpawLT?src=hash) (@ ムーの子孫 吉祥寺店 in [武蔵野市, 東京都) https://t.co/LGgcoOTd2P — そけと (@socket_x) 2015, 5月 31
メンバーを所属組織割合が均等になるようにテーブルを分けて着席したわけですが，一方のテーブルではもんじゃ焼きを作るアルゴリズムの話やら，一方のテーブルではそもそももんじゃ焼きの作り方を知らない人しかおらず…など開始早々異常でした．
まぁ，なんやかんや懇親会ともあって周りの方と楽しい会話をすることは出来ました．
ぼくは早々にお腹がいっぱいになって後半は無限に水を飲み続けていました．
なぞの闇っぽい物体が生成されたりしてましたが，美味しくいただけました．
懇親会わず #cpawLT pic.twitter.com/k2aBarC1Gy — ぱろっくlv 0.05 (@porisuteru) 2015, 5月 31
感想 LTは様々なところで聞く側として参加してきたが，自分自身が登壇するというのは初めてだったので，（内容はともかく）良い経験となったし面白い話が聞けて良かった．
近いうちに身内でのLT大会でもやるかと某氏と話していたので，その時に役立てればいいかなと．
Cpawのメンバーの方々には大変お世話になりました．</description>
    </item>
    
    <item>
      <title>MINI Hardening Project #1.1 に参加した話</title>
      <link>https://socketo.github.io/posts/2015/06/13/01/</link>
      <pubDate>Sat, 13 Jun 2015 20:33:33 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2015/06/13/01/</guid>
      <description>※ 移行前の元ブログ記事 : MINI Hardening Project #1.1 に参加した話 - #include &amp;lt;sys_socket.h&amp;gt;
5月は毎週末にIT関連のイベントに参加してたが，全然まとめていなかったのでこのタイミングでまとめ．
MINI Hardening Project #1.1 (2015/05/23 10:30〜) : http://minihardening.connpass.com/event/13818/
2015-5-23，IIJさんで開催されたMINI Hardening Project #1.1に参加してきました．
====
最寄駅の飯田橋についてIIJに行くまでにとりあえず迷子になった．
Hardening #とは MINI Hardeningの存在はいつぞやの#ssmjpで某氏が教えてくれて，某氏も参加するとの話で参加した．その時に元祖の沖縄で開催しているHardeningの存在を知った．
Hardening Project | Web Application Security Forum - WASForum
&amp;ldquo;「守る技術」の価値を最大化することを目指す、全く新しいセキュリティ・イベント&amp;quot;らしく，CTFとは違った競技とのこと．
競技は，与えられたサーバで運用しているサービスを継続しているかの稼働率（SLA）のポイントと，報告書（何に対応したのかの報告）でのポイントで競う．
チーム戦で行うということで4人1組のチームが7(覚えてない）つで競技をした．
与えられたサーバは，完全にアップデートをサボったLAMP環境だった．すごい見覚えがある．
競技開始からわりとすぐに攻撃者が攻撃してきたり，わりと忙しい感じの競技だった．
今回はMINIということで3時間という競技時間だったが本家は8時間耐久戦らしい()
競技 はじめに断っておきますと，私は完全に役に立っておらず，Slackで対応していったものを眺めたりtail-f /var/logでログを眺めて怪しそうな通信を見てるだけだった．
サーバの管理はちょっといじっただけの完全に初心者以下の人間だったので，役に立てるわけはなかったが，チームメンバが対応していっているのを見て勉強になるなあとログを眺めてた．
アップデートを怠ったサーバならば，アップデートをすればいいのでは？と思い競技中にyumやapt-getを試みようとしたが，パッケージ管理のシステムがネットに接続できずにできなかった．だが，協議後にアップデートをして対応していたチームがいたり，前回の#1での報告から知ったことだが自分でパッケージファイルを持ってきて展開することは出来るみたいだった．
優勝賞品の（ミニ）麻袋贈呈です！ #minihardening pic.twitter.com/l6QfD4fzag — Minoru Kobayashi (@unkn0wnbit) 2015, 5月 23
結果としては，チームの方々の柔軟で迅速な対応のおかげで1位となった．完全に自分は役に立っていなかったので申し訳ないと思いながら差し入れのスイーツを食していた．
感想 競技終了後に運営の方々の答え合わせがあり，新たな知識ばかりでとても勉強になった．
今までCTFを初心者なりにちょっと参加してきた身としては，攻撃されるというのが新鮮ではあった．
サーバの管理をしよう（してる）とする身として基礎的な知識がこれほど無いのかと思い知らされた．周りがプロばかりだと怯んでいたが，結果的に得られるものが多くて良かった．
おまけ チームメンバの方が持ってきたエナジードリンクシリーズが見たことないエナジードリンクばかりだった．
世の中には自分の知らないエナジードリンクや，エナジードリンクを使用した料理があるのだと知った．世界は広い．</description>
    </item>
    
    <item>
      <title>TDU CTF 2014 Satellite in ConoHaに参加した話</title>
      <link>https://socketo.github.io/posts/2015/03/31/</link>
      <pubDate>Tue, 31 Mar 2015 00:26:42 +0000</pubDate>
      
      <guid>https://socketo.github.io/posts/2015/03/31/</guid>
      <description>※ 移行前の元ブログ記事 : TDU CTF 2014 Satellite in ConoHaに参加した話 - #include &amp;lt;sys_socket.h&amp;gt;
2015-03-29、TDU CTFに参加してきました。
TDU CTF 2014 Satellite in ConoHa (2015/03/29 12:00〜) : http://connpass.com/event/11986/
CTF for Beginnersでの簡易CTF以外ではCTF初参加なのでビクビクしながら行きました。
本当の初心者だった自分は結局620pt取れました。
懇親会でどのようにして問題を解いたかなどを参加者の方々と話していくなかで、自分が手も足も出なかった問題に対してのアプローチの仕方などを知ることがとても楽しいものでした。
自分が解けた問題は少ないですがWriteupとか感想を。
Web Easy SQLi
とりあえず
&amp;#39; OR 1 = 1 -- をしてみたけどダメで色々と試してたらダブルコーテーションなら何か反応があり、
&amp;#34; OR 1 = 1 -- を突っ込んだらフラグが出た。複数フラグがあったようでしたがそれ以上進むことが出来ずに断念。
binary string_compare
実行ファイルstring_compare.exeをとりあえずstringsしたらMinamiKotoriとかTDU{%s_is_very_cutie}といったフラグのフォーマットっぽいのが出てきたけど、IDAに食わせた。
多分TDU{%s_is_very_cutie}の%s部分にMinamiKotoriを入れれば良さそうな感じだったのでTDU{MinamiKotori_is_very_cutie}をsubmit
競技終了後に中身をちゃんと見てみたら、入力をとって「MinamiKotori」だったらFlagを出して、それ以外だったら「INVALID KEY」が返されるとのこと。
とりあえず私はラブライブ！では穂乃果ちゃんが好きなのでKosakaHonokaと入力するだけしておく。
KosakaHonokaではINVALID KEY
Trip Picture
20150223_Kyoto.jpg（ことりちゃん率の高いラバスト画像）が与えられたのでとりあえずstringsコマンドしたらFlagっぽいのが出たのでsubmitした
読めない文字1
文末に&amp;quot;==&amp;ldquo;がつく文字列が与えられていたので、とりあえずBase64でデコード。そしたらまた文末に&amp;rdquo;==&amp;ldquo;がついた文字列が出てきたのでもう一回デコードしたらFlagが出た。
network 柚子胡椒 Vol.1
Bluetoothの通信をキャプチャしたっぽいpcapが与えられたのでWiresharkで開いて内容を見てたらFlagがあったのでそれをsubmitした
crypt 我が同胞に告ぐ
文字列&amp;quot;avia hhlam li as li ii llaem xiwe hhiso lllasom&amp;quot;が与えられ、最初はシーザー暗号かと思いPythonで一文字ずつズラして表示したりしたけどそれっぽいものにはならくて諦めかけていたが、問題の作成者のnomukenさんが「この問題は宗教的な戦争が～…」との発言をしていたので、Vim/Emacsの宗教戦争かとのことでVimを起動してその文字列をスペースがあたる部分をEscで入力すると</description>
    </item>
    
  </channel>
</rss>
